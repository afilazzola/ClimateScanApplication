shiny::runApp()
runApp()
runApp()
runApp()
runApp()
df
test
test <- read.csv(C:\\Data\\PhD - 10th Year\\richmondhill.climatescan\\richmondhill.summed.csv)
test <- read.csv("C:\\Data\\PhD - 10th Year\\richmondhill.climatescan\\richmondhill.summed.csv)
test <- read.csv("C:\\Data\\PhD - 10th Year\\richmondhill.climatescan\\richmondhill.summed.csv")
str(test)
df <- test
df[,"department"] <- paste(df[,"Division"],df[,"Sub.Identifier"], sep=":")
depts <- unique(df$department)
df
str(df)
depts
intval2 <- data.frame()
for(j in 1:length(depts)){
intval <- data.frame() ## empty row dataframe
for(i in 1:length(depts)){
dept.1 <- subset(df, department==depts[j], select=c("If","Then.simplified")) ## select risks from department "j"
dept.1 <- paste(dept.1$If,dept.1$Then.simplified) ## combine into 1 column
dept.i <- subset(df, department==depts[i], select=c("If","Then.simplified")) ## select risks from department "i"
dept.i <- paste(dept.i$If,dept.i$Then.simplified) ## combine into 1 column
val <- data.frame(dept=length(intersect(dept.1,dept.i))) ## count number of duplicates between two departments
rownames(val) <- paste(depts[i]) # attach department "i" name
intval <- rbind(intval,val) ## attach to empty dataframe
}
colnames(intval) <- paste(depts[j]) ##attach department "j" name
intval2 <- cbind.fill(intval2,intval) ## attach completed row into empty dataframe
}
intval2
str(intval2)
source("cbind.r")
for(j in 1:length(depts)){
intval <- data.frame() ## empty row dataframe
for(i in 1:length(depts)){
dept.1 <- subset(df, department==depts[j], select=c("If","Then.simplified")) ## select risks from department "j"
dept.1 <- paste(dept.1$If,dept.1$Then.simplified) ## combine into 1 column
dept.i <- subset(df, department==depts[i], select=c("If","Then.simplified")) ## select risks from department "i"
dept.i <- paste(dept.i$If,dept.i$Then.simplified) ## combine into 1 column
val <- data.frame(dept=length(intersect(dept.1,dept.i))) ## count number of duplicates between two departments
rownames(val) <- paste(depts[i]) # attach department "i" name
intval <- rbind(intval,val) ## attach to empty dataframe
}
colnames(intval) <- paste(depts[j]) ##attach department "j" name
intval2 <- cbind.fill(intval2,intval) ## attach completed row into empty dataframe
}
intval2
str(intval2)
str(intval2)
str(df)
source("cbind.r")
intval2 <- data.frame()
for(j in 1:length(depts)){
intval <- data.frame() ## empty row dataframe
for(i in 1:length(depts)){
dept.1 <- subset(df, department==depts[j], select=c("If","Then.simplified")) ## select risks from department "j"
dept.1 <- paste(dept.1$If,dept.1$Then.simplified) ## combine into 1 column
dept.i <- subset(df, department==depts[i], select=c("If","Then.simplified")) ## select risks from department "i"
dept.i <- paste(dept.i$If,dept.i$Then.simplified) ## combine into 1 column
val <- data.frame(dept=length(intersect(dept.1,dept.i))) ## count number of duplicates between two departments
rownames(val) <- paste(depts[i]) # attach department "i" name
intval <- rbind(intval,val) ## attach to empty dataframe
}
colnames(intval) <- paste(depts[j]) ##attach department "j" name
intval2 <- cbind.fill(intval2,intval) ## attach completed row into empty dataframe
}
corrplot(intval2, method = "square")
intval2
str(intval2)
intval <- data.frame() ## empty row dataframe
for(i in 1:length(depts)){
dept.1 <- subset(df, department==depts[j], select=c("If","Then.simplified")) ## select risks from department "j"
dept.1 <- paste(dept.1$If,dept.1$Then.simplified) ## combine into 1 column
dept.i <- subset(df, department==depts[i], select=c("If","Then.simplified")) ## select risks from department "i"
dept.i <- paste(dept.i$If,dept.i$Then.simplified) ## combine into 1 column
val <- data.frame(dept=length(intersect(dept.1,dept.i))) ## count number of duplicates between two departments
rownames(val) <- paste(depts[i]) # attach department "i" name
intval <- rbind(intval,val) ## attach to empty dataframe
}
intval
str(intval)
colnames(intval) <- paste(depts[j])
intval
i
j
depts[i]
intval2 <- data.frame()
intval2 <- cbind.fill(intval2,intval)
intval2
str(intval2)
class(intval2)
class(intval)
intval2 <- data.frame()
intval2
intval2 <- cbind(intval2,intval)
intval2[,j] <- intval ## attach completed row into empty dataframe
intval2 <- data.frame()
intval2[,j] <- intval ## attach completed row into empty dataframe
intval
intval2
cbind.fill <- function(...){
nm <- list(...)
nm <- lapply(nm, as.matrix)
n <- max(sapply(nm, nrow))
do.call(cbind, lapply(nm, function (x)
rbind(x, matrix(, n-nrow(x), ncol(x)))))
}
intval2 <- cbind.fill(intval2,intval)
str(intval2)
class(intval2)
intval2[,j] <- intval ## attach completed row into empty dataframe
intval2 <- cbind.fill(intval2,intval)
class(intval2)
str(intval2)
intval2 <- data.frame()
intval2
intval
bind_cols(intval, intval2)
intval2 <- data.frame()
for(j in 1:length(depts)){
intval <- data.frame() ## empty row dataframe
for(i in 1:length(depts)){
dept.1 <- subset(df, department==depts[j], select=c("If","Then.simplified")) ## select risks from department "j"
dept.1 <- paste(dept.1$If,dept.1$Then.simplified) ## combine into 1 column
dept.i <- subset(df, department==depts[i], select=c("If","Then.simplified")) ## select risks from department "i"
dept.i <- paste(dept.i$If,dept.i$Then.simplified) ## combine into 1 column
val <- data.frame(dept=length(intersect(dept.1,dept.i))) ## count number of duplicates between two departments
rownames(val) <- paste(depts[i]) # attach department "i" name
intval <- rbind(intval,val) ## attach to empty dataframe
}
colnames(intval) <- paste(depts[j]) ##attach department "j" name
intval2 <- bind_cols(intval2, intval) ## attach completed row into empty dataframe
}
corrplot(intval2, method = "square")
str(intval2)
intval2 <- data.frame()
for(j in 1:length(depts)){
intval <- data.frame() ## empty row dataframe
for(i in 1:length(depts)){
dept.1 <- subset(df, department==depts[j], select=c("If","Then.simplified")) ## select risks from department "j"
dept.1 <- paste(dept.1$If,dept.1$Then.simplified) ## combine into 1 column
dept.i <- subset(df, department==depts[i], select=c("If","Then.simplified")) ## select risks from department "i"
dept.i <- paste(dept.i$If,dept.i$Then.simplified) ## combine into 1 column
val <- data.frame(dept=length(intersect(dept.1,dept.i))) ## count number of duplicates between two departments
rownames(val) <- paste(depts[i]) # attach department "i" name
intval <- rbind(intval,val) ## attach to empty dataframe
}
colnames(intval) <- paste(depts[j]) ##attach department "j" name
intval2 <- bind_cols(intval2, intval) ## attach completed row into empty dataframe
}
intval2
intval
intval2 <- bind_cols(intval2, intval)
bind_cols(intval2, intval)
intval2 <- combine(intval2, intval) ## attach completed row into empty dataframe
intval2 <- data.frame(ncol=26,nrow=26)
for(j in 1:length(depts)){
intval <- data.frame() ## empty row dataframe
for(i in 1:length(depts)){
dept.1 <- subset(df, department==depts[j], select=c("If","Then.simplified")) ## select risks from department "j"
dept.1 <- paste(dept.1$If,dept.1$Then.simplified) ## combine into 1 column
dept.i <- subset(df, department==depts[i], select=c("If","Then.simplified")) ## select risks from department "i"
dept.i <- paste(dept.i$If,dept.i$Then.simplified) ## combine into 1 column
val <- data.frame(dept=length(intersect(dept.1,dept.i))) ## count number of duplicates between two departments
rownames(val) <- paste(depts[i]) # attach department "i" name
intval <- rbind(intval,val) ## attach to empty dataframe
}
colnames(intval) <- paste(depts[j]) ##attach department "j" name
intval2 <- cbind(intval2, intval) ## attach completed row into empty dataframe
}
str(intval2)
corrplot(intval2, method = "square")
class(intval2)
intval2 <- data.frame(matrix(ncol=26,nrow=26))
for(j in 1:length(depts)){
intval <- data.frame() ## empty row dataframe
for(i in 1:length(depts)){
dept.1 <- subset(df, department==depts[j], select=c("If","Then.simplified")) ## select risks from department "j"
dept.1 <- paste(dept.1$If,dept.1$Then.simplified) ## combine into 1 column
dept.i <- subset(df, department==depts[i], select=c("If","Then.simplified")) ## select risks from department "i"
dept.i <- paste(dept.i$If,dept.i$Then.simplified) ## combine into 1 column
val <- data.frame(dept=length(intersect(dept.1,dept.i))) ## count number of duplicates between two departments
rownames(val) <- paste(depts[i]) # attach department "i" name
intval <- rbind(intval,val) ## attach to empty dataframe
}
colnames(intval) <- paste(depts[j]) ##attach department "j" name
intval2 <- cbind(intval2, intval) ## attach completed row into empty dataframe
}
str(intval2)
intval2 <- data.frame(matrix(ncol=26,nrow=26))
for(j in 1:length(depts)){
intval <- data.frame() ## empty row dataframe
for(i in 1:length(depts)){
dept.1 <- subset(df, department==depts[j], select=c("If","Then.simplified")) ## select risks from department "j"
dept.1 <- paste(dept.1$If,dept.1$Then.simplified) ## combine into 1 column
dept.i <- subset(df, department==depts[i], select=c("If","Then.simplified")) ## select risks from department "i"
dept.i <- paste(dept.i$If,dept.i$Then.simplified) ## combine into 1 column
val <- data.frame(dept=length(intersect(dept.1,dept.i))) ## count number of duplicates between two departments
rownames(val) <- paste(depts[i]) # attach department "i" name
intval <- rbind(intval,val) ## attach to empty dataframe
}
intval2[,j] <- intval ## attach completed row into empty dataframe
colnames(intval2)[j] <- paste(depts[j]) ##attach department "j" name
}
str(intval2)
corrplot(intval2, method = "square")
class(intval2)
str(intval2)
cor(intval2)
corrplot(cor(intval2), method = "square")
class(cor(intval2))
corrplot(matrix(intval2), method = "square")
matrix(intval2)
corrplot(intval2, method = "square")
class(intval2)
intval2
corrplot(as.matrix(intval2), method = "square")
as.matrix(intval2)
cordat <- gather(intval, dept1, dept2, 1:ncol(intval))
str(cordat)
library(reshape2)
cordata <- melt(intval2)
cordat
heat(cordat)
heat(cordata)
head(cordata)
cordat[,"dept"] <- rownames(intval2)
cordat
intval2[,"dept"] <- rownames(intval2)
intval2
intval2 <- data.frame(matrix(ncol=26,nrow=26))
for(j in 1:length(depts)){
intval <- data.frame() ## empty row dataframe
for(i in 1:length(depts)){
dept.1 <- subset(df, department==depts[j], select=c("If","Then.simplified")) ## select risks from department "j"
dept.1 <- paste(dept.1$If,dept.1$Then.simplified) ## combine into 1 column
dept.i <- subset(df, department==depts[i], select=c("If","Then.simplified")) ## select risks from department "i"
dept.i <- paste(dept.i$If,dept.i$Then.simplified) ## combine into 1 column
val <- data.frame(dept=length(intersect(dept.1,dept.i))) ## count number of duplicates between two departments
rownames(val) <- paste(depts[i]) # attach department "i" name
intval <- rbind(intval,val) ## attach to empty dataframe
}
intval2[,j] <- intval ## attach completed row into empty dataframe
colnames(intval2)[j] <- paste(depts[j]) ##attach department "j" name
}
str(intval2)
intval2
intval2[,"dept"] <- colnames(intval2)
intval2
cordata <- gather(intval2, dept, value, 1:ncol(intval2)-1)
cordata <- gather(intval2, dept, value, 1:(ncol(intval2)-1))
cordata
str(cordata)
26*26
26**26
26**2
intval2 <- data.frame(matrix(ncol=26,nrow=26))
for(j in 1:length(depts)){
intval <- data.frame() ## empty row dataframe
for(i in 1:length(depts)){
dept.1 <- subset(df, department==depts[j], select=c("If","Then.simplified")) ## select risks from department "j"
dept.1 <- paste(dept.1$If,dept.1$Then.simplified) ## combine into 1 column
dept.i <- subset(df, department==depts[i], select=c("If","Then.simplified")) ## select risks from department "i"
dept.i <- paste(dept.i$If,dept.i$Then.simplified) ## combine into 1 column
val <- data.frame(dept=length(intersect(dept.1,dept.i))) ## count number of duplicates between two departments
rownames(val) <- paste(depts[i]) # attach department "i" name
intval <- rbind(intval,val) ## attach to empty dataframe
}
intval2[,j] <- intval ## attach completed row into empty dataframe
colnames(intval2)[j] <- paste(depts[j]) ##attach department "j" name
}
intval2[,"dept1"] <- colnames(intval2)
cordata <- gather(intval2, dept2, value, 1:(ncol(intval2)-1))
ggplot(data = cordata, aes(x=dept1, y=dept2, fill=value)) +
geom_tile()
depts <- unique(df$Division.combined)
intval2 <- data.frame(matrix(ncol=26,nrow=26))
for(j in 1:length(depts)){
intval <- data.frame() ## empty row dataframe
for(i in 1:length(depts)){
dept.1 <- subset(df, department==depts[j], select=c("If","Then.simplified")) ## select risks from department "j"
dept.1 <- paste(dept.1$If,dept.1$Then.simplified) ## combine into 1 column
dept.i <- subset(df, department==depts[i], select=c("If","Then.simplified")) ## select risks from department "i"
dept.i <- paste(dept.i$If,dept.i$Then.simplified) ## combine into 1 column
val <- data.frame(dept=length(intersect(dept.1,dept.i))) ## count number of duplicates between two departments
rownames(val) <- paste(depts[i]) # attach department "i" name
intval <- rbind(intval,val) ## attach to empty dataframe
}
intval2[,j] <- intval ## attach completed row into empty dataframe
colnames(intval2)[j] <- paste(depts[j]) ##attach department "j" name
}
length(depts)
depts <- unique(df$Division.combined)
## empty data frames to load correlation values into
intval2 <- data.frame(matrix(ncol=length(depts),nrow=length(depts)))
for(j in 1:length(depts)){
intval <- data.frame() ## empty row dataframe
for(i in 1:length(depts)){
dept.1 <- subset(df, department==depts[j], select=c("If","Then.simplified")) ## select risks from department "j"
dept.1 <- paste(dept.1$If,dept.1$Then.simplified) ## combine into 1 column
dept.i <- subset(df, department==depts[i], select=c("If","Then.simplified")) ## select risks from department "i"
dept.i <- paste(dept.i$If,dept.i$Then.simplified) ## combine into 1 column
val <- data.frame(dept=length(intersect(dept.1,dept.i))) ## count number of duplicates between two departments
rownames(val) <- paste(depts[i]) # attach department "i" name
intval <- rbind(intval,val) ## attach to empty dataframe
}
intval2[,j] <- intval ## attach completed row into empty dataframe
colnames(intval2)[j] <- paste(depts[j]) ##attach department "j" name
}
intval2[,"dept1"] <- colnames(intval2)
cordata <- gather(intval2, dept2, value, 1:(ncol(intval2)-1))
ggplot(data = cordata, aes(x=dept1, y=dept2, fill=value)) +
geom_tile()
cordata
max(cordata$value)
intval2
depts <- unique(df$Division.combined)
## empty data frames to load correlation values into
intval2 <- data.frame(matrix(ncol=length(depts),nrow=length(depts)))
for(j in 1:length(depts)){
intval <- data.frame() ## empty row dataframe
for(i in 1:length(depts)){
dept.1 <- subset(df, Division.combined==depts[j], select=c("If","Then.simplified")) ## select risks from department "j"
dept.1 <- paste(dept.1$If,dept.1$Then.simplified) ## combine into 1 column
dept.i <- subset(df, Division.combined==depts[i], select=c("If","Then.simplified")) ## select risks from department "i"
dept.i <- paste(dept.i$If,dept.i$Then.simplified) ## combine into 1 column
val <- data.frame(dept=length(intersect(dept.1,dept.i))) ## count number of duplicates between two departments
rownames(val) <- paste(depts[i]) # attach department "i" name
intval <- rbind(intval,val) ## attach to empty dataframe
}
intval2[,j] <- intval ## attach completed row into empty dataframe
colnames(intval2)[j] <- paste(depts[j]) ##attach department "j" name
}
intval2[,"dept1"] <- colnames(intval2)
cordata <- gather(intval2, dept2, value, 1:(ncol(intval2)-1))
ggplot(data = cordata, aes(x=dept1, y=dept2, fill=value)) +
geom_tile()
ggplot(data = cordata, aes(x=dept1, y=dept2, fill=value)) +
geom_tile()+
scale_fill_gradient(low = "white", high = "red")
plot(data = cordata, aes(x=dept1, y=dept2, fill=value)) +
geom_tile()+
scale_fill_gradient(low = "white", high = "red") + ylab("") + xlab("")+ theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(data = cordata, aes(x=dept1, y=dept2, fill=value)) +
geom_tile()+
scale_fill_gradient(low = "white", high = "red") + ylab("") + xlab("")
ggplot(data = cordata, aes(x=dept1, y=dept2, fill=value)) +
geom_tile()+
scale_fill_gradient(low = "white", high = "red") + ylab("") + xlab("")+ theme(axis.text.x = element_text(angle = 90, hjust = 1))
cordata
runApp()
